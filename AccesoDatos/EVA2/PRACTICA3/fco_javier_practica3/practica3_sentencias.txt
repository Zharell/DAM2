package practica3;

import java.sql.Connection;
import java.sql.DriverManager;
public class JavierProyectoBD
{
  private java.sql.Connection conexion;
  private java.sql.Statement sentenciaSQL;
  private java.sql.ResultSet cdr;
    private Connection n;
  
  public JavierProyectoBD() throws ClassNotFoundException, java.sql.SQLException,
      InstantiationException, IllegalAccessException {
    
    //Metodo que realiza la conexion
    conexionBd();
    
  }
  
  //Termina la conexion con la BD
  public void cerrarConexion() throws java.sql.SQLException {
    if (cdr != null) cdr.close();
    if (sentenciaSQL != null) sentenciaSQL.close();
    if (conexion != null) conexion.close();
  }
  
  //Informacion sobre las tablas
  public String[] tablas() throws java.sql.SQLException {
    cdr = sentenciaSQL.executeQuery("SHOW TABLES");
    cdr.last();
    String[] tablas = new String[cdr.getRow()];
    cdr.beforeFirst();
    int i = 0;
    while(cdr.next())
      tablas[i++] = cdr.getString(1);
    return tablas;
  }
  
  //Muestra informacion de una tabla
  public java.sql.ResultSet obtenerTabla(String tabla) throws java.sql.SQLException  {
    cdr = sentenciaSQL.executeQuery(
        "SELECT * FROM " + tabla);
    return cdr;
  }
  
  //Inserta en alumnos
  public void insertarAlumnos(String nombre, String apellido ,int edad)
      throws java.sql.SQLException {
      sentenciaSQL.executeUpdate("INSERT INTO " + "alumnos" + " VALUES ('" + nombre + "', '" + apellido + "', '" + edad + "')" );
  };
  
  //Inserta en profesores
  public void insertarProfesores(String nombre, String apellido ,int edad)
      throws java.sql.SQLException {
      sentenciaSQL.executeUpdate("INSERT INTO " + "profesores" + " VALUES ('" + nombre + "', '" + apellido + "', '" + edad + "')" );
  };
  
  //Borra en alumnos
  public void borrarAlumnos(String nombre) throws java.sql.SQLException {
    sentenciaSQL.executeUpdate("DELETE FROM " + "alumnos" + " WHERE NOMBRE LIKE '" + nombre+"'");
  }
  
  //Borra en profesores
  public void borrarProfesores(String nombre) throws java.sql.SQLException {
    sentenciaSQL.executeUpdate("DELETE FROM " + "profesores" + " WHERE NOMBRE LIKE '" + nombre+"'");
  }
  
  
  public void mostrarTabla(String tabla)
      throws java.sql.SQLException {
    cdr = obtenerTabla(tabla);
    while(cdr.next()) recorrerFila();
  }
  
  public void recorrerFila() throws java.sql.SQLException {
    int nColumnas = cdr.getMetaData().getColumnCount();
    for (int i = 1; i <= nColumnas; ++i) {
      System.out.print(cdr.getString(i) + " ");
    }
    
    System.out.println();
  } 
  
  //Realiza la conexion con la BD
  public void conexionBd() throws java.sql.SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {
      
    //Se carga el driver para su uso y se realiza la conexion
    Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
    String url = "jdbc:mysql://localhost:3306/prueba?serverTimezone=UTC";
    Connection conexion = DriverManager.getConnection(url,"root","");
    
    //Obtencion del statement
    sentenciaSQL = conexion.createStatement(
                       java.sql.ResultSet.TYPE_SCROLL_INSENSITIVE,
                       java.sql.ResultSet.CONCUR_UPDATABLE);
    
    //Se recorre y muestra las tablas encontradas
    System.out.println("\nConexion realizada con exito.\n");
    System.out.println("Tablas de la base de datos: ");
    
    //Utilizado para mostrar nombre de las tablas
    String[] tabla = tablas();
    
    for (int i = 0; i < tabla.length; ++i)
      System.out.println(tabla[i]);
    }
  
}
